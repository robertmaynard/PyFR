<ServerManagerConfiguration>
  <ProxyGroup name="filters">
    <SourceProxy name="PyFRContourFilter"
		 class="vtkPyFRContourFilter" label="Contour PyFR Data">
      <Documentation long_help="Generate isosurface from PyFR data."
                     short_help="Generate isosurface.">
	The ContourPyFRData filter computes isosurfaces using PyFR data. The
        filter uses vtk-m to generate the isosurface entirely on the GPU,
        eliminating the need for PyFR's field data to be transferred to the host.
      </Documentation>
      <InputProperty
          name="Input"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="PyFRData"/>
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty
          name="ContourField"
          command="SetContourField"
          number_of_elements="1"
          default_values="1">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Density"/>
          <Entry value="1" text="Pressure"/>
          <Entry value="2" text="Velocity_u"/>
          <Entry value="3" text="Velocity_v"/>
          <Entry value="4" text="Velocity_w"/>
        </EnumerationDomain>
        <Documentation>
          This property indicates which field will be used to generate
	  the isosurface.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
	  name = "ContourValue"
	  command="SetContourValue"
          number_of_elements_per_command="1"
          repeat_command="1"
          set_number_command="SetNumberOfContours"
          use_index="1"
          panel_visibility="advanced">
        <Documentation>
	  This property specifies the values at which to compute an isosurface.
	</Documentation>
      </DoubleVectorProperty>
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy class="vtkPPyFRCrinkleClipFilter"
                 name="Clip">
      <Documentation long_help="Clip with an implicit plane or sphere. Clipping does not reduce the dimensionality of the data set. The output data type of this filter is always an unstructured grid."
                     short_help="Clip with an implicit plane or sphere.">The Clip filter
                     cuts away a portion of the input data set using an
                     implicit plane or sphere. This filter operates on all types of data
                     sets, and it returns unstructured grid data on
                     output.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="PyFRData" />
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
                          number_of_components="1"
                          optional="1" />
        <Documentation>This property specifies the dataset on which the Clip
        filter will operate.</Documentation>
      </InputProperty>
      <ProxyProperty command="SetClipFunction"
                     label="Clip Type"
                     name="ClipFunction">
        <ProxyGroupDomain name="groups">
          <Group name="implicit_functions" />
        </ProxyGroupDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="implicit_functions"
                 name="Plane" />
          <Proxy group="implicit_functions"
                 name="Sphere" />
        </ProxyListDomain>
        <Documentation>This property specifies the parameters of the clip
        function (an implicit plane) used to clip the dataset.</Documentation>
      </ProxyProperty>
      <DoubleVectorProperty information_only="1"
                            name="InputBounds">
        <BoundsDomain name="bounds">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </BoundsDomain>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetInsideOut"
                         default_values="0"
                         name="InsideOut"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 0, the clip filter will
        return that portion of the dataset that lies within the clip function.
        If set to 1, the portions of the dataset that lie outside the clip
        function will be returned instead.</Documentation>
      </IntVectorProperty>
      <Hints>
        <Visibility replace_input="2" />
      </Hints>
      <!-- End Clip -->
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy name="PyFRDataConverter"
		 class="vtkPyFRDataConverter" label="Convert PyFR Data">
      <Documentation long_help="Convert PyFR data to vtkUnstructuredGrid."
                     short_help="Convert PyFR data.">
	The ConvertPyFRData filter converts PyFR data into an
	unstructured grid.
      </Documentation>
      <InputProperty
          name="Input"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="PyFRData"/>
        </DataTypeDomain>
      </InputProperty>
    </SourceProxy>
    <!-- ==================================================================== -->
    <SourceProxy name="PyFRContourDataConverter"
		 class="vtkPyFRContourDataConverter"
		 label="Convert PyFR Contour Data">
      <Documentation long_help="Convert PyFR data to vtkPolyData."
                     short_help="Convert PyFR data.">
	The ConvertPyFRContourData filter converts PyFR contour data
	into polydata.
      </Documentation>
      <InputProperty
          name="Input"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="PyFRContourData"/>
        </DataTypeDomain>
      </InputProperty>
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
